stages:
  - deploy

deploy-job:
  stage: deploy
  tags:
    - django_core_itm
  script:
    - set -e
    - eval $(ssh-agent -s)
    - cat "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh && ssh-keyscan -H 82.202.138.125 >> ~/.ssh/known_hosts

    # Очистка и создание директории на сервере
    - ssh pavel@82.202.138.125 "sudo rm -rf /home/pavel/dev/django_core_itm/domainname && sudo mkdir -p /home/pavel/dev/django_core_itm/domainname"

    # Установка прав
    - ssh pavel@82.202.138.125 "sudo chown -R pavel:pavel /home/pavel/dev/django_core_itm/domainname"

    # Копирование содержимого папки domainname
    - scp -r $CI_PROJECT_DIR/domainname/* pavel@82.202.138.125:/home/pavel/dev/django_core_itm/domainname/

    # Запуск контейнера
    - ssh pavel@82.202.138.125 "cd /home/pavel/dev/django_core_itm/domainname && docker stop container_django_app || true && docker rm container_django_app || true && docker image prune -f && docker network prune -f && docker run -d --name container_django_app --network mynetwork -p 5555:8000 -v ./media:/domainname/media -v ./static:/domainname/static -e MODE=$MODE -e DB_HOST=$DB_HOST -e DB_PORT=$DB_PORT -e DB_NAME=$DB_NAME -e DB_USER=$DB_USER -e DB_PASSWORD=$DB_PASSWORD app_django_itm /domainname/app.sh"
  variables:
    MODE: "production"
    DB_HOST: "container_django_db"
    DB_PORT: "5432"
    DB_NAME: "django_db"
    DB_USER: "$DB_USER"
    DB_PASSWORD: "$DB_PASSWORD"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'